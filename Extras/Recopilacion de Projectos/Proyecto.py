# Indicaciones:
# Los recursos comprimidos, hay que descomprimirlos en la ruta base de tu ordenador, en mi caso: "C:\Users\Ruben".


# Importar D√≠as
import Recopilacion


# Librerias
import datetime
from os import system


# Dia de hoy
Fecha = datetime.date.today()
Dia_Hoy = f"{Fecha.day}/{Fecha.month}/{Fecha.year}"


# Funci√≥n de Pedir
def Presentacion():
    print(f"¬°Bienvenido/a de Nuevo! ({Dia_Hoy})")
    print(f'Este Proyecto es una recopilaci√≥n de los proyectos de {negrita_y_subrayado("Rub√©n Blasco Armengod")} durante su formaci√≥n en "Python Total".')
    print("Durante su desarrollo en este curso, realiz√≥ 16 proyectos, que son mencionados a continuaci√≥n:")
    print("")
    print(f"D√≠a 1: {Data_1.titulo}")
    print(f"D√≠a 2: {Data_2.titulo}")
    print(f"D√≠a 3: {Data_3.titulo}")
    print(f"D√≠a 4: {Data_4.titulo}")
    print(f"D√≠a 5: {Data_5.titulo}")
    print(f"D√≠a 6: {Data_6.titulo}")
    print(f"D√≠a 7: {Data_7.titulo}")
    print(f"D√≠a 8: {Data_8.titulo}")
    print(f"D√≠a 9: {Data_9.titulo}")
    print(f"D√≠a 10: {Data_10.titulo}")
    print(f"D√≠a 11: {Data_11.titulo}")
    print(f"D√≠a 12: ")
    print(f"D√≠a 13: ")
    print(f"D√≠a 14: ")
    print(f"D√≠a 15: ")
    print(f"D√≠a 16: ")
    print("")
    Pregunta = input(f"{negrita("¬øQue projecto deseas ejecutar?")} ")

    while Pregunta not in Lista_de_Verificacion:
        print("")
        print("üö®‚èê Por favor, introduzca el Nombre del Proyecto / El D√≠a con su n¬∫ / N¬∫ del Proyecto correctamente.")
        print("")
        Pregunta = input(f"{negrita("¬øQue projecto deseas ejecutar?")} ")
    return Pregunta


# Funcion Limpiar Pantalla
def Limpiar_pantalla():
    system("cls")


# Funci√≥n Negrita + Subrayado [\033[1m ‚Üí Negrita, \033[3m ‚Üí Cursiva, \033[4m ‚Üí Subrayado, \033[0m ‚Üí Reset (vuelve al estilo normal]
def negrita_y_subrayado(texto):
    return f"\033\033[4m{texto}\033[0m"


# Funci√≥n Subrayado [\033[1m ‚Üí Negrita, \033[3m ‚Üí Cursiva, \033[4m ‚Üí Subrayado, \033[0m ‚Üí Reset (vuelve al estilo normal]
def negrita(texto):
    return f"\033[1m{texto}\033[0m"


# Descripcion
def Descripcion(dia, fecha, descripcion, etiqueta):
    print(negrita(f"Este es el Proyecto del {dia}:"))
    print("")
    print(f"{negrita("Fecha:")} {fecha}")
    print("")
    print(negrita("Este proyecto trata sobre:"))
    print(f"{descripcion}")
    print("")
    print(f"{negrita("Las etiquetas de este projecto son:")} {etiqueta}")
    print("")
    print(f"{negrita("Demonstraci√≥n:")}")
    print("")


# Descripcion D√≠a 10
def Descripcion_10(dia, fecha, descripcion, etiqueta):
    print(negrita(f"Este es el Proyecto del {dia}:"))
    print("")
    print(f"{negrita("Fecha:")} {fecha}")
    print("")
    print(negrita("Este proyecto trata sobre:"))
    print(f"{descripcion}")
    print("")
    print(f"{negrita("Las etiquetas de este projecto son:")} {etiqueta}")
    print("")
    print(f"{negrita("Demonstraci√≥n:")}")
    print("Este proyecto se ejecuta en una pesta√±a diferente.")
    print("")


# Funci√≥n Preguntar de Volver
def Volver_preguntar():
    print("")
    print("Volver al Menu ‚èê Salir")
    Volver_Preguntar = input(negrita("¬øQu√© deseas hacer a continuaci√≥n? "))

    while Volver_Preguntar not in Lista_de_Verificacion_Volver_A_Preguntar:
        print("")
        print('üö®‚èê Por favor, introduzca salir o volver al menu correctamente.')
        print("")
        Volver_Preguntar = input(f"{negrita("¬øQu√© deseas hacer a continuaci√≥n? ")} ")

    return Volver_Preguntar


# Clase del Proyecto
class Proyectos:
    def __init__(self, titulo, descripcion, etiqueta, fecha, dia, numero):
        self.titulo = titulo
        self.descripcion = descripcion
        self.etiqueta = etiqueta
        self.fecha = fecha
        self.dia = dia
        self.numero = numero


# Data de Proyectos
Data_1 = Proyectos("Creador de Nombres", "Vas a crear un c√≥digo en Python que le pida a tu amigo que responda\ndos preguntas que requieran una sola palabra cada una y que luego\nle muestre en pantalla esas palabras combinadas para formar una marca creativa.", "#Python, #Inputs, #Cadenas", "19/03/2025", "D√≠a 1", "1")

Data_2 = Proyectos("Calculador de Comisiones", "La situaci√≥n es esta: t√∫ trabajas en una empresa donde los vendedores reciben comisiones\ndel 13% por sus ventas totales, y tu jefe quiere que ayudes a los vendedores a calcular sus\ncomisiones creando un programa que les pregunte su nombre y cu√°nto han vendido en este\nmes. Tu programa le va a responder con una frase que incluya su nombre y el monto que le\ncorresponde por las comisiones.", "#Python, #Inputs, #C√°lculos", "20/03/2025", "D√≠a 2", "2")

Data_3 = Proyectos("Analizador de Textos", "La consigna es la siguiente: vas a crear un programa que primero le pida al usuario que\ningrese un texto. Puede ser un texto cualquiera: un art√≠culo entero, un p√°rrafo, una frase, un\npoema, lo que quiera. Luego, el programa le va a pedir al usuario que tambi√©n ingrese tres\nletras a su elecci√≥n y a partir de ese momento nuestro c√≥digo va a procesar esa informaci√≥n\npara hacer cinco tipos de an√°lisis.", "#Python, #Strings, #An√°lisisDeTexto", "22/03/2025", "D√≠a 3", "5")

Data_4 = Proyectos("Adivina el N√∫mero", "el programa le va a preguntar al usuario su nombre, y luego le va a decir\nalgo as√≠ como ‚ÄúBueno, Juan, he pensado un n√∫mero entre 1 y 100, y tienes solo ocho intentos\npara adivinar cu√°l crees que es el n√∫mero‚Äù. Entonces, en cada intento el jugador dir√° un\nn√∫mero y el programa puede responder cuatro cosas distintas", "#Python, #Juegos, #Random", "27/03/2025", "D√≠a 4", "4")

Data_5 = Proyectos("El Ahorcado", "El programa va a elegir una palabra secreta y le va a mostrar al jugador solamente una serie\nde guiones que representa la cantidad de letras que tiene la palabra. El jugador en cada turno\ndeber√° elegir una letra y si la letra se encuentra en la palabra oculta, el sistema le va a\nmostrar en qu√© lugares se encuentra. Pero si el jugador dice una letra que no se encuentra en\nla palabra oculta, pierde una vida.", "#Python, #Juegos, #Loops, #Condicionales", "02/04/2025", "D√≠a 5", "5")

Data_6 = Proyectos("Recetario", "Este c√≥digo le va a dar primero la bienvenida al usuario, le va a informar\nla ruta de acceso al directorio donde se encuentra nuestra carpeta de recetas, le va a informar\ncu√°ntas recetas hay en total dentro de esa carpeta, y luego le va a pedir que elija una de\nestas opciones que tenemos aqu√≠.", "#Python, #ManejoDeArchivos, #SistemasDeCarpetas", "04/04/2025", "D√≠a 6", "6")

Data_7 = Proyectos("Cuenta Bancaria", "El cliente tambi√©n va a tener tres m√©todos. El primero va a ser uno de los\nm√©todos especiales y es el que permite que podamos imprimir a nuestro cliente. Este m√©todo\nva a permitir que cuando el c√≥digo pida imprimir Cliente, se muestren todos sus datos,\nincluyendo el balance de su cuenta. Luego, un m√©todo llamado Depositar, que le va a permitir\ndecidir cu√°nto dinero quiere agregar a su cuenta. Y finalmente, un tercer m√©todo llamado\nRetirar, que le permita decidir cu√°nto dinero quiere sacar de su cuenta.", "#Python, #POO, #M√©todos", "10/04/2025", "D√≠a 7", "7")

Data_8 = Proyectos("Consola de Turnos", "Vas a crear el tunero para una farmacia que tiene tres √°reas de atenci√≥n:\nperfumer√≠a, farmacia (que es donde venden los medicamentos), y cosm√©ticos. Tu programa le\ntiene que preguntar al cliente a cu√°l de las √°reas desea dirigirse, y le va a dar un n√∫mero de\nturno seg√∫n a qu√© √°rea se dirija. Por ejemplo, si elige cosm√©tica le va a dar el n√∫mero C-54\n(‚ÄúC‚Äù de cosm√©tica). Luego de eso, nos va a preguntar si queremos sacar otro turno. Esto, en\nrealidad, es para simular si viene un nuevo cliente. Y repetir√° todo el proceso.", "#Python, #Condicionales, #Simulaci√≥n", "13/04/2025", "D√≠a 8", "8")

Data_9 = Proyectos("Buscador de N√∫meros en Serie", "Un programa dise√±ado para buscar n√∫meros de serie con un formato espec√≠fico dentro de un √°rbol de carpetas y archivos .txt.\nEl usuario descomprime una carpeta que contiene subcarpetas y m√∫ltiples archivos de texto. Aunque la mayor√≠a del contenido es irrelevante, algunos archivos contienen n√∫meros de serie v√°lidos.\nEl formato de n√∫mero de serie buscado es: una letra 'N' seguida de tres caracteres alfab√©ticos, un guion y cinco n√∫meros. Ejemplo: Nryu-12365.\nEl programa recorre todas las carpetas y archivos utilizando el m√≥dulo os (especialmente el m√©todo walk()), y emplea expresiones regulares para detectar los patrones v√°lidos.\nCada hallazgo se muestra en una tabla en consola con la fecha actual, los nombres de los archivos y los n√∫meros de serie encontrados.\nAdem√°s, se indica cu√°ntos n√∫meros se encontraron y cu√°nto tiempo tom√≥ la b√∫squeda, redondeando este tiempo hacia arriba.\nSe utilizan los m√≥dulos datetime para obtener la fecha en formato dd/mm/aa, y time para calcular la duraci√≥n.\nEl programa est√° pensado como un ejercicio pr√°ctico para afianzar conocimientos sobre manejo de archivos, estructuras de carpetas, regex y presentaci√≥n de resultados en consola.", "#Python, #Regex, #Archivos, #Automatizaci√≥n", "14/02/2025", "D√≠a 9", "9")

Data_10 = Proyectos("Invasi√≥n Espacial", "Un juego en Pygame que es una versi√≥n del cl√°sico 'Space Invaders'.\nEl jugador controla una nave espacial que puede moverse lateralmente y disparar balas para eliminar enemigos.\nLos enemigos se desplazan horizontalmente y descienden al tocar los bordes de la pantalla.\nSi alguno de ellos llega a la parte inferior, el juego termina.\nSe incluyen efectos de sonido para los disparos y las colisiones, lo cual mejora la experiencia de juego.\nAdem√°s, se incorpora un sistema de puntaje que se muestra en todo momento, y un mensaje en pantalla indica cuando el juego ha finalizado.", "#Python, #Pygame, #Juegos, #Animaciones", "17/04/2025", "D√≠a 10", "10")

Data_11 = Proyectos("Scraping de Libros", "Un proyecto en Python que realiza web scraping en la p√°gina 'Books to Scrape'.\nUtiliza las librer√≠as `requests` y `BeautifulSoup` para recorrer autom√°ticamente las 50 p√°ginas del sitio web.\nExtrae e imprime en consola los t√≠tulos de los libros que tienen una calificaci√≥n de 4 o 5 estrellas.\nEste proyecto muestra c√≥mo automatizar la recopilaci√≥n de datos relevantes desde p√°ginas web estructuradas.\nEs ideal para aprender sobre el an√°lisis de HTML, la navegaci√≥n por m√∫ltiples p√°ginas y el filtrado de informaci√≥n espec√≠fica.", "#Python, #WebScraping, #BeautifulSoup, #Requests", "21/04/2025", "D√≠a 11", "11")


# Variables / Listas
Bucle = True
Lista_de_Verificacion = [Data_1.dia, Data_1.titulo, Data_1.numero,
                         Data_2.dia, Data_2.titulo, Data_2.numero,
                         Data_3.dia, Data_3.titulo, Data_3.numero,
                         Data_4.dia, Data_4.titulo, Data_4.numero,
                         Data_5.dia, Data_5.titulo, Data_5.numero,
                         Data_6.dia, Data_6.titulo, Data_6.numero,
                         Data_7.dia, Data_7.titulo, Data_7.numero,
                         Data_8.dia, Data_8.titulo, Data_8.numero,
                         Data_9.dia, Data_9.titulo, Data_9.numero,
                         Data_10.dia, Data_10.titulo, Data_10.numero,
                         Data_11.dia, Data_11.titulo, Data_11.numero,


                         ]

Lista_de_Verificacion_Salir = ["Salir", "salir", "SALIR"]
Lista_de_Verificacion_Volver = ["VOLVER", "volver", "Volver", "Volver al Menu", "volver al menu", "Volver al menu", "VOLVER AL MENU"]
Lista_de_Verificacion_Volver_A_Preguntar = Lista_de_Verificacion_Salir + Lista_de_Verificacion_Volver


# Ejecucion del Codigo
while Bucle:
    try:
        Limpiar_pantalla()
        Respuesta = Presentacion()

        if Respuesta == Data_1.dia or Respuesta == Data_1.titulo or Respuesta == Data_1.numero:
            Limpiar_pantalla()
            Descripcion(Data_1.dia, Data_1.fecha, Data_1.descripcion, Data_1.etiqueta)
            Recopilacion.Nombre_Cerveza()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_2.dia or Respuesta == Data_2.titulo or Respuesta == Data_2.numero:
            Limpiar_pantalla()
            Descripcion(Data_2.dia, Data_2.fecha, Data_2.descripcion, Data_2.etiqueta)
            Recopilacion.Calculador_impuestos()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_3.dia or Respuesta == Data_3.titulo or Respuesta == Data_3.numero:
            Limpiar_pantalla()
            Descripcion(Data_3.dia, Data_3.fecha, Data_3.descripcion, Data_3.etiqueta)
            Recopilacion.analizador_textos()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_4.dia or Respuesta == Data_4.titulo or Respuesta == Data_4.numero:
            Limpiar_pantalla()
            Descripcion(Data_4.dia, Data_4.fecha, Data_4.descripcion, Data_4.etiqueta)
            Recopilacion.numero_aleatorio()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_5.dia or Respuesta == Data_5.titulo or Respuesta == Data_5.numero:
            Limpiar_pantalla()
            Descripcion(Data_5.dia, Data_5.fecha, Data_5.descripcion, Data_5.etiqueta)
            Recopilacion.elegir_palabra()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_6.dia or Respuesta == Data_6.titulo or Respuesta == Data_6.numero:
            Limpiar_pantalla()
            Descripcion(Data_6.dia, Data_6.fecha, Data_6.descripcion, Data_6.etiqueta)
            Recopilacion.recetario()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_7.dia or Respuesta == Data_7.titulo or Respuesta == Data_7.numero:
            Limpiar_pantalla()
            Descripcion(Data_7.dia, Data_7.fecha, Data_7.descripcion, Data_7.etiqueta)
            Recopilacion.cuenta_banco()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_8.dia or Respuesta == Data_8.titulo or Respuesta == Data_8.numero:
            Limpiar_pantalla()
            Descripcion(Data_8.dia, Data_8.fecha, Data_8.descripcion, Data_8.etiqueta)
            Recopilacion.elegir_turno()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_9.dia or Respuesta == Data_9.titulo or Respuesta == Data_9.numero:
            Limpiar_pantalla()
            Descripcion(Data_9.dia, Data_9.fecha, Data_9.descripcion, Data_9.etiqueta)
            Recopilacion.buscar_numeros()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

        elif Respuesta == Data_10.dia or Respuesta == Data_10.titulo or Respuesta == Data_10.numero:
            Limpiar_pantalla()
            Descripcion_10(Data_10.dia, Data_10.fecha, Data_10.descripcion, Data_10.etiqueta)
            Recopilacion.juego()
            Bucle = False

        elif Respuesta == Data_11.dia or Respuesta == Data_11.titulo or Respuesta == Data_11.numero:
            Limpiar_pantalla()
            Descripcion(Data_11.dia, Data_11.fecha, Data_11.descripcion, Data_11.etiqueta)
            Recopilacion.web_scraping()
            Respuesta_Preguntar = Volver_preguntar()

            if Respuesta_Preguntar in Lista_de_Verificacion_Volver:
                pass

            elif Respuesta_Preguntar in Lista_de_Verificacion_Salir:
                Bucle = False

    except:
        print("")
        print(negrita("üö®‚èê ¬°Error detectado!"))
        Bucle = False

